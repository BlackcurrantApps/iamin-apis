#import <Foundation/Foundation.h>
#import "SWGCategory1.h"
#import "SWGEvent1.h"
#import "SWGInlineResponse20011.h"
#import "SWGInlineResponse20011Items.h"
#import "SWGInlineResponse20012.h"
#import "SWGInlineResponse20012Items.h"
#import "SWGInlineResponse20013.h"
#import "SWGInlineResponse20013Items.h"
#import "SWGInlineResponse20014.h"
#import "SWGInlineResponse20014Items.h"
#import "SWGInlineResponse20015.h"
#import "SWGInlineResponse2003.h"
#import "SWGInlineResponse2003Items.h"
#import "SWGInlineResponse2007.h"
#import "SWGMainEvent1.h"
#import "SWGMainEvent2.h"
#import "SWGApi.h"

/**
* IAMIN API
* API Backend for the IAMIN App
*
* OpenAPI spec version: 1.0.0
* Contact: sanket@blackcurrantapps.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGManagerApi: NSObject <SWGApi>

extern NSString* kSWGManagerApiErrorDomain;
extern NSInteger kSWGManagerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add Event Head to Event
/// 
///
/// @param ehEmail 
/// @param eventID 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20014Items*
-(NSURLSessionTask*) managerAddEventHeadWithEhEmail: (NSString*) ehEmail
    eventID: (NSNumber*) eventID
    completionHandler: (void (^)(SWGInlineResponse20014Items* output, NSError* error)) handler;


/// Add Manager to Main Event
/// 
///
/// @param manageremail 
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20013Items*
-(NSURLSessionTask*) managerAddManagerWithManageremail: (NSString*) manageremail
    mainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGInlineResponse20013Items* output, NSError* error)) handler;


/// Add PR Representative to Main Event
/// 
///
/// @param pRemail 
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20012Items*
-(NSURLSessionTask*) managerAddPRWithPRemail: (NSString*) pRemail
    mainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGInlineResponse20012Items* output, NSError* error)) handler;


/// Send Announcements to everyone
/// 
///
/// @param mainEventID 
/// @param message 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerAnnounceAllWithMainEventID: (NSNumber*) mainEventID
    message: (NSString*) message
    completionHandler: (void (^)(NSError* error)) handler;


/// Send Announcements to iaminer's only
/// 
///
/// @param mainEventId 
/// @param message 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerAnnounceIAMINersWithMainEventId: (NSNumber*) mainEventId
    message: (NSString*) message
    completionHandler: (void (^)(NSError* error)) handler;


/// Send Announcements to ticket holders only
/// 
///
/// @param mainEventId 
/// @param message 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerAnnounceTicketHoldersWithMainEventId: (NSNumber*) mainEventId
    message: (NSString*) message
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete Category only if empty
/// 
///
/// @param categoryID 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerDeleteCategoryWithCategoryID: (NSNumber*) categoryID
    completionHandler: (void (^)(NSError* error)) handler;


/// Edit & Add Event
/// 
///
/// @param eventId 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerDeleteEventWithEventId: (NSNumber*) eventId
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete Event Head
/// 
///
/// @param eventID 
/// @param ehEmail 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerDeleteEventHeadWithEventID: (NSNumber*) eventID
    ehEmail: (NSString*) ehEmail
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete Manager
/// 
///
/// @param mainEventId 
/// @param managerEmail 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerDeleteManagerWithMainEventId: (NSNumber*) mainEventId
    managerEmail: (NSString*) managerEmail
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete PR if Amount collected = 0
/// 
///
/// @param mainEventID 
/// @param prEmail 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerDeletePRWithMainEventID: (NSNumber*) mainEventID
    prEmail: (NSString*) prEmail
    completionHandler: (void (^)(NSError* error)) handler;


/// Edit & Add Event
/// 
///
/// @param category 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20011Items*
-(NSURLSessionTask*) managerEditCategoryWithCategory: (SWGCategory1*) category
    completionHandler: (void (^)(SWGInlineResponse20011Items* output, NSError* error)) handler;


/// Edit & Add Event
/// 
///
/// @param event 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse2003Items*
-(NSURLSessionTask*) managerEditEventWithEvent: (SWGEvent1*) event
    completionHandler: (void (^)(SWGInlineResponse2003Items* output, NSError* error)) handler;


/// Edit Main Event
/// 
///
/// @param mainEvent 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) managerEditMainListingWithMainEvent: (SWGMainEvent2*) mainEvent
    completionHandler: (void (^)(NSError* error)) handler;


/// get a event by event id
/// 
///
/// @param eventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse2003Items*
-(NSURLSessionTask*) managerGetEventWithEventId: (NSNumber*) eventId
    completionHandler: (void (^)(SWGInlineResponse2003Items* output, NSError* error)) handler;


/// get a categories under a main event
/// 
///
/// @param mainEventID 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20011*
-(NSURLSessionTask*) managerGetEventCategoriesWithMainEventID: (NSNumber*) mainEventID
    completionHandler: (void (^)(SWGInlineResponse20011* output, NSError* error)) handler;


/// get a category by id
/// 
///
/// @param categoryID 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20011Items*
-(NSURLSessionTask*) managerGetEventCategoryWithCategoryID: (NSNumber*) categoryID
    completionHandler: (void (^)(SWGInlineResponse20011Items* output, NSError* error)) handler;


/// get Event Heads for Event
/// 
///
/// @param eventID 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20014*
-(NSURLSessionTask*) managerGetEventHeadsWithEventID: (NSNumber*) eventID
    completionHandler: (void (^)(SWGInlineResponse20014* output, NSError* error)) handler;


/// get a events under a category
/// 
///
/// @param categoryID 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse2003*
-(NSURLSessionTask*) managerGetEventsWithCategoryID: (NSNumber*) categoryID
    completionHandler: (void (^)(SWGInlineResponse2003* output, NSError* error)) handler;


/// Get Main Event History
/// 
///
/// @param maineventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse2007*
-(NSURLSessionTask*) managerGetHistoryWithMaineventId: (NSNumber*) maineventId
    completionHandler: (void (^)(SWGInlineResponse2007* output, NSError* error)) handler;


/// get a single Main Event
/// 
///
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGMainEvent1*
-(NSURLSessionTask*) managerGetMainListingWithMainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGMainEvent1* output, NSError* error)) handler;


/// get Managers for main event
/// 
///
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20013*
-(NSURLSessionTask*) managerGetManagersWithMainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGInlineResponse20013* output, NSError* error)) handler;


/// get PRs for main event
/// 
///
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20012*
-(NSURLSessionTask*) managerGetPRSWithMainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGInlineResponse20012* output, NSError* error)) handler;


/// Delete Main Event Stats
/// 
///
/// @param mainEventId 
/// 
///  code:200 message:"OK"
///
/// @return SWGInlineResponse20015*
-(NSURLSessionTask*) managerGetStatsWithMainEventId: (NSNumber*) mainEventId
    completionHandler: (void (^)(SWGInlineResponse20015* output, NSError* error)) handler;



@end
